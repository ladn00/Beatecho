<Window x:Class="Beatecho.Views.Wins.UserWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Beatecho.Views.Wins" xmlns:vm="clr-namespace:Beatecho.ViewModels"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:conv="clr-namespace:Beatecho.Converters"
        mc:Ignorable="d"
        Title="BEATECHO" Height="600" Width="1000" Background="Transparent" WindowStyle="None" AllowsTransparency="True" ResizeMode="CanResize" Icon="/imgs/BEATECHO.png">
    <Window.Resources>
        
        <conv:EmptyToVisibleConverter x:Key="EmptyToVisibleConverter"/>
        <conv:EmptyToCollapsedConverter x:Key="EmptyToCollapsedConverter"/>
        <Style x:Key="PlaylistButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        



        <Style x:Key="ControlButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="10"/>
        </Style>

        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">White</Color>
        <Color x:Key="ContentAreaColorDark">White</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">White</Color>
        <Color x:Key="DisabledForegroundColor">White</Color>

        <Color x:Key="SelectedBackgroundColor">White</Color>
        <Color x:Key="SelectedUnfocusedColor">White</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">White</Color>
        <Color x:Key="ControlDarkColor">White</Color>

        <Color x:Key="ControlMouseOverColor">White</Color>
        <Color x:Key="ControlPressedColor">White</Color>

        <Color x:Key="GlyphColor">White</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">White</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">White</Color>

        <Color x:Key="NavButtonFrameColor">White</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White"
                    Offset="0" />
                    <GradientStop Color="White"
                    Offset="0.4" />
                    <GradientStop Color="White"
                    Offset="0.6" />
                    <GradientStop Color="White"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <Style x:Key="SliderButtonStyle"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="IsTabStop"
          Value="false" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle"
       TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Height"
          Value="14" />
            <Setter Property="Width"
          Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse"
                 StrokeThickness="1">
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1" />
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Template when the orientation of the Slider is Horizontal.-->
        <ControlTemplate x:Key="HorizontalSlider"
                 TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                     MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Top"
             Height="4"
             Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>
                <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Height="4"
            Grid.Row="1"
            BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                            Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="0.0" />
                                    <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Row="1"
           x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Row="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Bottom"
             Height="4"
             Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
             Value="TopLeft">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="BottomRight">
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="Both">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Template when the orientation of the Slider is Vertical.-->
        <ControlTemplate x:Key="VerticalSlider"
                 TargetType="{x:Type Slider}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"
                        MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Left"
             Width="4"
             Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>

                <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Width="4"
            Grid.Column="1"
            BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                            Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="1,0"
                             StartPoint="0.25,0">
                            <GradientStop Color="{DynamicResource ControlLightColor}"
                        Offset="0" />
                            <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                        Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Column="1"
           x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Column="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Right"
             Width="4"
             Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
             Value="TopLeft">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="BottomRight">
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="Both">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type Slider}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
             Value="Horizontal">
                    <Setter Property="MinWidth"
              Value="104" />
                    <Setter Property="MinHeight"
              Value="21" />
                    <Setter Property="Template"
              Value="{StaticResource HorizontalSlider}" />
                </Trigger>
                <Trigger Property="Orientation"
             Value="Vertical">
                    <Setter Property="MinWidth"
              Value="21" />
                    <Setter Property="MinHeight"
              Value="104" />
                    <Setter Property="Template"
              Value="{StaticResource VerticalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="WindowControlButton" TargetType="Button">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#33FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <MediaElement x:Name="mediaElement" LoadedBehavior="Manual" UnloadedBehavior="Stop">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MediaOpened">
                    <i:InvokeCommandAction Command="{Binding MediaOpenedCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MediaEnded">
                    <i:InvokeCommandAction Command="{Binding MediaEndedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </MediaElement>
        <!-- Основной контейнер -->
        <Border Background="{DynamicResource ScndBackground}" CornerRadius="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>


                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!-- Боковая панель -->
                <Grid Width="200" Background="{DynamicResource MainBackground}" Grid.RowSpan="2" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel VerticalAlignment="Top" Margin="10">
                        <Image Source="/imgs/BEATECHO.png" Height="60" Margin="0,10,0,20"/>

                        <!-- Навигация -->
                        <Button Style="{StaticResource NavButtonStyle}" Margin="2" Content="Главная" Click="GoToMainPage"/>
                        <Button Style="{StaticResource NavButtonStyle}" Margin="2"  Content="Любимые треки" Command="{Binding OpenFavoritesCommand}"/>
                        <Button Style="{StaticResource NavButtonStyle}" Margin="2" Content="Моя медиатека" Command="{Binding OpenLocalSongsPageCommand}">

                            <Button.DataContext>
                                <vm:LocalSongsViewModel/>
                            </Button.DataContext>
                        </Button>
                        <!-- Плейлисты -->
                        <Grid DataContext="{Binding PlaylistViewModel}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="ПЛЕЙЛИСТЫ" Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                            <Button Style="{StaticResource NavButtonStyle}" Command="{Binding AddPlaylistCommand}" Grid.Column="1">
                                <Image Source="/imgs/plus.png" Width="20"/>
                            </Button>
                        </Grid>
                    </StackPanel>
                    <ListView Name="PlaylistListView" Grid.Row="1"
                        SelectionMode="Single"
                        Background="Transparent"
                        BorderThickness="0"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Playlists}">
                        <ListView.DataContext>
                            <vm:MainPageViewModel/>
                        </ListView.DataContext>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Button Click="OpenPlaylist"
          Focusable="False"
          Style="{StaticResource PlaylistButtonStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding PlaylistPhoto}" Stretch="UniformToFill" Width="50" Height="50" Margin="10"/>
                                        <TextBlock Text="{Binding Title}" VerticalAlignment="Center" FontSize="16" Margin="10" Foreground="White"/>
                                    </StackPanel>
                                </Button>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>

                <!-- Верхняя панель навигации -->
                <Border Grid.Column="1" Height="60" Background="{DynamicResource ScndBackground}" CornerRadius="0,10,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>


                        <!-- Область для перетаскивания окна -->
                        <Border Grid.Column="1" Background="Transparent" MouseLeftButtonDown="Border_MouseLeftButtonDown" DataContext="{StaticResource SearchViewModel}">
                            <Border Background="{DynamicResource CellsBackground}" CornerRadius="20" Width="400" Margin="10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Иконка лупы -->
                                    <Viewbox Width="20" Height="20" Margin="10,0" VerticalAlignment="Center">
                                        <Image Source="/imgs/loupe.png"/>
                                    </Viewbox>

                                    <!-- Поле ввода -->
                                    <Grid Grid.Column="1">
                                        <TextBox x:Name="SearchBox" Background="Transparent" Foreground="White"
                         BorderThickness="0" Padding="5" FontSize="14"
                         VerticalAlignment="Center" Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         TextChanged="SearchBox_TextChanged">
                                            <TextBox.InputBindings>
                                                <KeyBinding Key="Enter" Command="{Binding OpenSearchPageCommand}"/>
                                            </TextBox.InputBindings>
                                        </TextBox>

                                        <!-- Placeholder -->
                                        <TextBlock x:Name="PlaceholderText" Text="Введите название..." 
                           Foreground="Gray" 
                           VerticalAlignment="Center" 
                           Margin="5,0,0,0" 
                           IsHitTestVisible="False"/>
                                    </Grid>

                                    <Button Grid.Column="2" Background="Transparent" BorderThickness="0" Margin="5,0" VerticalAlignment="Center" Click="AccountButton_Click" Style="{StaticResource NavButtonStyle}">
                                        <Image Source="/imgs/account.png" Width="24" Height="24"/>
                                        <Button.ContextMenu>
                                            <ContextMenu x:Name="AccountMenu">
                                                <MenuItem  x:Name="AdminMenuItem" Header="Администрирование" Click="Admin_Click"/>
                                                <MenuItem Header="Выход" Click="Exit_Click"/>
                                                <MenuItem Header="Сменить тему" Click="ToggleTheme_Click"/>
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                    </Button>
                                </Grid>
                            </Border>
                        </Border>



                        <!-- Кнопки управления окном -->
                        <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0">
                            <Button Style="{StaticResource WindowControlButton}" Click="MinimizeButton_Click">
                                <Path Data="M 0,0 H 8" Stroke="{DynamicResource MainFontColor}" StrokeThickness="1"/>
                            </Button>
                            <Button Style="{StaticResource WindowControlButton}" Click="MaximizeButton_Click" Margin="5,0">
                                <Path Data="M 0,0 H 8 V 8 H 0 Z" Stroke="{DynamicResource MainFontColor}" StrokeThickness="1" Fill="Transparent"/>
                            </Button>
                            <Button Style="{StaticResource WindowControlButton}" Click="CloseButton_Click">
                                <Path Data="M 0,0 L 8,8 M 0,8 L 8,0" Stroke="{DynamicResource MainFontColor}" StrokeThickness="1"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>

                <!-- Область контента -->
                <Frame x:Name="ContentFrame" Grid.Column="1" Grid.Row="1" Source="ContentPage.xaml" NavigationUIVisibility="Hidden" Background="Transparent"/>
                
                <!-- Нижняя панель управления -->
                <Border Grid.Row="2" Grid.ColumnSpan="2" Height="90" Background="{DynamicResource MainBackground}" CornerRadius="0,0,10,10" VerticalAlignment="Bottom">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"/>
                            <!-- Фиксированная ширина для информации о треке -->
                            <ColumnDefinition Width="*"/>
                            <!-- Центральная часть для кнопок управления -->
                            <ColumnDefinition Width="Auto"/>
                            <!-- Фиксированная ширина для управления громкостью -->
                        </Grid.ColumnDefinitions>

                        <!-- Информация о треке -->
                        <StackPanel Orientation="Horizontal" Margin="10" Name="CurrentSongBar" Grid.Column="0">
                            <Image Source="{Binding Photo}" Width="50" Height="50"/>
                            <StackPanel Margin="10,0,0,0">
                                <TextBlock Name="tbSongTitle" FontSize="15" Text="{Binding Title}" Foreground="White" TextTrimming="CharacterEllipsis" MaxWidth="130" MouseLeftButtonUp="GoToAlbum">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="TextDecorations" Value="Underline"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Name="tbArtist" Text="{Binding Artist}" Foreground="{DynamicResource ScndFontColor}" TextTrimming="CharacterEllipsis" MaxWidth="130" MouseLeftButtonUp="GoToArtist">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="TextDecorations" Value="Underline"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </StackPanel>
                        
                        <!-- Prev, Pause, Next -->
                        <StackPanel Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="80">

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-25, 5, 0, 5">
                                <Button Style="{StaticResource NavButtonStyle}" Command="{Binding ShuffleCommand}" HorizontalAlignment="Left">
                                    <Image Source="/imgs/shuffle.png" Width="15"/>
                                </Button>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    
                                
                                <Button Style="{StaticResource NavButtonStyle}" Command="{Binding PreviousCommand}">
                                    <Image Source="/imgs/prev.png" Width="15"/>
                                </Button>
                                <Button Style="{StaticResource NavButtonStyle}" Command="{Binding PlayPauseCommand}">
                                    <Image Source="{Binding PlayPauseImage}" Width="30"/>
                                </Button>
                                <Button Style="{StaticResource NavButtonStyle}" Command="{Binding NextCommand}">
                                    <Image Source="/imgs/next.png" Width="15"/>
                                </Button>
                                </StackPanel>
                            </StackPanel>
                            <Slider x:Name="TrackSlider"
                    HorizontalAlignment="Stretch"
                    Margin="2"
                    Minimum="0"
                    Maximum="100"
                    Width="400"
                    Value="{Binding SliderValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="ValueChanged">
                                        <i:InvokeCommandAction Command="{Binding SliderValueChangedCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Thumb.DragStarted">
                                        <i:InvokeCommandAction Command="{Binding SliderDragStartedCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Thumb.DragCompleted">
                                        <i:InvokeCommandAction Command="{Binding SliderDragCompletedCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <i:InvokeCommandAction Command="{Binding TrackPreviewMouseDownCommand}" CommandParameter="{Binding ElementName=TrackSlider}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Slider>
                        </StackPanel>

                        <!-- Громкость -->
                        <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="10" VerticalAlignment="Center">
                            <Button Style="{StaticResource ImgButtonStyle}" Click="GoToVinyl_Click" Margin="0, 0, 15, 0">
                                <Image Source="../../imgs/vinyl.png" Width="20" />

                            </Button>
                            <Image Source="../../imgs/volume.png" Width="18" Margin="0, 0, 5, 0"/>
                            <Slider x:Name="volumeSlider" Minimum="0" Maximum="100" Value="50" Width="100">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="ValueChanged">
                                        <i:InvokeCommandAction Command="{Binding VolumeChangedCommand}" CommandParameter="{Binding Value, ElementName=volumeSlider}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <i:InvokeCommandAction Command="{Binding VolumeMouseDownCommand}" CommandParameter="{Binding ElementName=volumeSlider}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Slider>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>
